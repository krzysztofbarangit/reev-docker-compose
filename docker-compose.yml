# Compose Spec (bez "version:")

# ===================  NETWORKS  ===================
networks:
  reev: {}

# ===================  VOLUMES  ====================
volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  pgadmin_data:
  reev_static_data:
  seqrepo_local:
  seqrepo_master:

# ===================  SERVICES  ===================
services:
  # -------- Baza i kolejki --------
  postgres:
    image: postgres:12
    restart: unless-stopped
    networks: [reev]
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-reev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-reev} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    restart: unless-stopped
    networks: [reev]
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3
    restart: unless-stopped
    networks: [reev]
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # -------- REEV Backend (bez portów/labels – za proxy Dokploya) --------
  reev-backend:
    image: ghcr.io/bihealth/reev:main
    restart: unless-stopped
    networks: [reev]
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-reev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      FORWARDED_ALLOW_IPS: "*"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
      annonars:
        condition: service_started
      cada-prio:
        condition: service_started
      dotty:
        condition: service_started
      mehari:
        condition: service_started
      viguno:
        condition: service_started
      auto-acmg:
        condition: service_started

  # -------- Celery --------
  reev-celery-worker:
    image: ghcr.io/bihealth/reev:main
    restart: unless-stopped
    networks: [reev]
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-reev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    entrypoint: ["/entrypoint-celery-worker.sh"]

  reev-celery-beat:
    image: ghcr.io/bihealth/reev:main
    restart: unless-stopped
    networks: [reev]
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-reev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    entrypoint: ["/entrypoint-celery-beat.sh"]

  # -------- Usługi wewnętrzne REEV --------
  dotty:
    image: ghcr.io/bihealth/dotty:latest
    restart: unless-stopped
    networks: [reev]
    volumes:
      - reev_static_data:/data:ro

  mehari:
    image: ghcr.io/varfish-org/mehari:latest
    restart: unless-stopped
    networks: [reev]
    volumes:
      - reev_static_data:/data:ro

  viguno:
    image: ghcr.io/varfish-org/viguno:latest
    restart: unless-stopped
    networks: [reev]
    volumes:
      - reev_static_data:/data:ro

  annonars:
    image: ghcr.io/varfish-org/annonars:latest
    restart: unless-stopped
    networks: [reev]
    volumes:
      - reev_static_data:/data:ro

  cada-prio:
    image: ghcr.io/bihealth/cada-prio:main
    restart: unless-stopped
    networks: [reev]
    volumes:
      - reev_static_data:/data:ro

  auto-acmg:
    image: ghcr.io/bihealth/auto-acmg:main
    restart: unless-stopped
    networks: [reev]
    volumes:
      - seqrepo_local:/usr/local/share/seqrepo
      - seqrepo_master:/home/auto-acmg/seqrepo/master

  # -------- Flower (podgląd kolejek) --------
  flower:
    image: mher/flower:latest
    restart: unless-stopped
    networks: [reev]
    depends_on:
      rabbitmq:
        condition: service_started
    command: ["celery", "--broker=amqp://guest@rabbitmq:5672//", "flower"]

  # -------- pgAdmin (wewnętrznie; nie publikujemy portów) --------
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    networks: [reev]
    depends_on:
      postgres:
        condition: service_started
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
